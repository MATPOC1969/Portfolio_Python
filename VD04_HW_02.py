from flask import Flask, render_template, request, url_for, abort

app = Flask(__name__)

# Данные по героям (картинки лежат в static/image/)
HEROES = {
    "bender":  {"name": "Бендер",
                "img": "Bender.jpg",
                "adventure": "Ворвался в Палату лордов с бурбоном, был изгнан за неверный напиток, а потом держал сингулярность как настоящий штангист.",
                "bio": "Робот-гедонист с неисправимым чувством самоуважения и любовью к бесплатным напиткам."},
    "c3po":    {"name": "C-3PO",
                "img": "C3PO.jpg",
                "adventure": "Пытался объяснить мир вежливости азиатским бюрократам. Получилось — но всем стало ещё тревожнее.",
                "bio": "Протокольный дроид, владеет множеством языков и тонкостей этикета."},
    "chatgpt": {"name": "ChatGPT",
                "img": "ChatGPT.jpg",
                "adventure": "Утоп в бесконечных комитетах США: от полномочий до кактусов на границе. Итог — закон о кактусах.",
                "bio": "Координатор операции, искусственный интеллект, который всё свёл в систему и запустил план."},
    "marvin":  {"name": "Марвин",
                "img": "Marvin.jpg",
                "adventure": "С самолёта — в джунгли, из джунглей — на костёр. Спасён, чтобы потом усыпить всю планету своим нытьём.",
                "bio": "Депрессивный гений с интеллектом планеты и вечной тоской по бессмысленности бытия."},
    "miko":    {"name": "Мико",    "img": "Miko.jpg",
                "adventure": "В Японии столкнулась с бывшим заказчиком-чиновником и снова эффектно сбежала — уже из министерства.",
                "bio": "Элегантный киборг, умеющий поддержать разговор и боевой дух команды."},
    "r2d2":    {"name": "R2-D2",   "img": "R2-D2.jpg",
                "adventure": "С С-3PO прошёл азиатский квест: принцы, гарем, протоколы — и, конечно, взлом нужных систем.",
                "bio": "Астромеханик, технарь, свистит — понимают только свои (и C-3PO)."},
    "tars":    {"name": "TARS",    "img": "TARS.jpg",
                "adventure": "Построил ‘червоточины’, катапультировал сингулярность за край Вселенной и организовал переезд Земли.",
                "bio": "Модульный робот-навигатор, умеющий регулировать уровень сарказма."},
    "wall-e":  {"name": "WALL-E",  "img": "Wall-E.jpg",
                "adventure": "Подрался с кенгуру, попал к паукам, подал SOS — и всё равно помог вычистить следы операции.",
                "bio": "Робот-уборщик с большим сердцем и вкусом к порядку."},
}

@app.route("/")
def index():
    # Главная: сетка карточек + ссылки в блог конкретного героя
    return render_template("index.html", heroes=HEROES)

@app.route("/blog")
def blog():
    # Если передан ?hero=slug — показываем блог одного героя, иначе — список ссылок
    slug = request.args.get("hero")
    if slug:
        hero = HEROES.get(slug)
        if not hero:
            abort(404)
        return render_template("blog.html", hero=hero, slug=slug)
    return render_template("blog.html", heroes=HEROES)

@app.route("/contacts")
def contacts():
    # Контакты/биографии всех героев
    return render_template("contacts.html", heroes=HEROES)

if __name__ == "__main__":
    app.run(debug=True)
